version: "3.8"

services:
  traefik:
    image: "traefik:v3.4"
    container_name: "traefik"
    command:
      - "--entryPoints.web.address=:80"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entrypoint=metrics"
      - "--entrypoints.metrics.address=:8082"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik_network

  prometheus:
    image: prom/prometheus:v2.49.1
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/usr/share/prometheus/console_libraries
      - --web.console.templates=/usr/share/prometheus/consoles
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - traefik_network

  grafana:
    image: grafana/grafana:10.3.3
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      # Optional: Mount provisioning configs for data sources/dashboards (more advanced)
      # - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      # - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - traefik_network

  db:
    container_name: pala-db-1
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    # ports: # Database port usually not exposed to the host unless needed for external tools
    #   - 5432:5432
    networks:
      - traefik_network

  backend:
    image: pala:0.0.3
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: example
      DB_NAME: postgres
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`backend.localhost`)"
      - "traefik.http.routers.backend.entrypoints=web"
      - "traefik.http.services.backend.loadbalancer.server.port=1234"
    networks:
      - traefik_network

networks:
  traefik_network:
    driver: bridge

volumes:
  pgdata:
  prometheus_data:
  grafana_data:
